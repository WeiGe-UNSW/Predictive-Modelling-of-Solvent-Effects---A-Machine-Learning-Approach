# -*- coding: utf-8 -*-
"""Ml_models_comparison.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e5Opq3jS0eCP5eRfXXfxcij8V2p7u9Eu
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import GradientBoostingRegressor, RandomForestRegressor
from sklearn.neural_network import MLPRegressor
from sklearn.svm import SVR
from xgboost import XGBRegressor
from sklearn.metrics import mean_squared_error
from google.colab import files


uploaded = files.upload()
data = pd.read_csv('Data.csv')

input_features = ['Curcumin Solubility', 'Polarity', 'Hildebrand Solubility Parameters',
                  'Dipole Moment', 'Dielectric constants', 'Viscosity', 'delta d', 'delta p', 'delta h']
output_variables = ['EE%', 'DLC%']

X = data[input_features]
y = data[output_variables]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)


models = {
    'Gradient Boosting': GradientBoostingRegressor(n_estimators=100, random_state=42),
    'Random Forest': RandomForestRegressor(n_estimators=100, random_state=42),
    'XGBoost': XGBRegressor(n_estimators=100, random_state=42),
    'SVR': SVR(kernel='rbf'),
    'MLP': MLPRegressor(hidden_layer_sizes=(100, 50), max_iter=6000, random_state=42)
}


for model_name, model in models.items():
    for output in output_variables:
        model.fit(X_train, y_train[output])
        train_pred = model.predict(X_train)
        test_pred = model.predict(X_test)

        train_score = model.score(X_train, y_train[output])
        test_score = model.score(X_test, y_test[output])
        train_mse = mean_squared_error(y_train[output], train_pred)
        test_mse = mean_squared_error(y_test[output], test_pred)

        print(f"\n{model_name} - {output}")
        print(f"Train R²: {train_score:.4f}")
        print(f"Test R²: {test_score:.4f}")
        print(f"Train MSE: {train_mse:.4f}")
        print(f"Test MSE: {test_mse:.4f}")
